# ================================================================================================
# TEST DU D√âPLOIEMENT RAILWAY
# ================================================================================================
# Ce script teste si votre serveur Railway fonctionne correctement
# ================================================================================================

Write-Host "üß™ TEST DU D√âPLOIEMENT RAILWAY" -ForegroundColor Cyan
Write-Host "=================================" -ForegroundColor Cyan
Write-Host ""

# ================================================================================================
# √âTAPE 1 : V√âRIFIER LA CONFIGURATION RAILWAY
# ================================================================================================
Write-Host "üîß √âTAPE 1: V√©rification de la configuration Railway..." -ForegroundColor Yellow

if (Test-Path "railway.json") {
    $railwayConfig = Get-Content "railway.json" | ConvertFrom-Json
    Write-Host "   ‚úÖ railway.json trouv√©" -ForegroundColor Green
    Write-Host "   üìã Commande de d√©marrage: $($railwayConfig.start)" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå railway.json manquant!" -ForegroundColor Red
    exit 1
}

if (Test-Path "start-railway.js") {
    Write-Host "   ‚úÖ start-railway.js trouv√©" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå start-railway.js manquant!" -ForegroundColor Red
    exit 1
}

Write-Host ""

# ================================================================================================
# √âTAPE 2 : TEST LOCAL DU SERVEUR
# ================================================================================================
Write-Host "üì° √âTAPE 2: Test local du serveur..." -ForegroundColor Yellow

Write-Host "   D√©marrage du serveur local..." -ForegroundColor Yellow
Start-Process -FilePath "node" -ArgumentList "start-railway.js" -WorkingDirectory $PWD -WindowStyle Hidden

# Attendre que le serveur d√©marre
Start-Sleep -Seconds 15

# Tester l'API
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000/api/stripe/products" -Method GET -TimeoutSec 10
    Write-Host "   ‚úÖ API Stripe accessible localement" -ForegroundColor Green
    Write-Host "   üìä Status: $($response.StatusCode)" -ForegroundColor Green
    
    # V√©rifier les en-t√™tes CORS
    if ($response.Headers['Access-Control-Allow-Origin']) {
        Write-Host "   ‚úÖ CORS configur√©: $($response.Headers['Access-Control-Allow-Origin'])" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è  En-t√™tes CORS manquants" -ForegroundColor Yellow
    }
    
} catch {
    Write-Host "   ‚ùå Erreur API locale: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""

# ================================================================================================
# √âTAPE 3 : TEST DE L'API RAILWAY
# ================================================================================================
Write-Host "üöÇ √âTAPE 3: Test de l'API Railway..." -ForegroundColor Yellow

$railwayUrl = "https://landingmaj-production.up.railway.app/api/stripe/products"

try {
    $headers = @{
        'Origin' = 'https://aqua-reve.com'
        'Content-Type' = 'application/json'
    }
    
    Write-Host "   Test de l'API Railway: $railwayUrl" -ForegroundColor Yellow
    
    $response = Invoke-WebRequest -Uri $railwayUrl -Method GET -Headers $headers -TimeoutSec 15
    
    Write-Host "   ‚úÖ API Railway accessible" -ForegroundColor Green
    Write-Host "   üìä Status: $($response.StatusCode)" -ForegroundColor Green
    
    # V√©rifier les en-t√™tes CORS
    if ($response.Headers['Access-Control-Allow-Origin']) {
        Write-Host "   ‚úÖ CORS Railway: $($response.Headers['Access-Control-Allow-Origin'])" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è  CORS Railway manquant" -ForegroundColor Yellow
    }
    
} catch {
    Write-Host "   ‚ùå Erreur API Railway: $($_.Exception.Message)" -ForegroundColor Red
    
    if ($_.Exception.Message -like "*502*") {
        Write-Host "   üö® ERREUR 502: Votre serveur Railway ne r√©pond pas!" -ForegroundColor Red
        Write-Host "   üí° V√©rifiez les logs Railway et red√©ployez" -ForegroundColor Yellow
    }
    
    if ($_.Exception.Message -like "*CORS*") {
        Write-Host "   üö® ERREUR CORS: Probl√®me de configuration CORS" -ForegroundColor Red
        Write-Host "   üí° V√©rifiez la configuration CORS dans server.js" -ForegroundColor Yellow
    }
}

Write-Host ""

# ================================================================================================
# √âTAPE 4 : V√âRIFICATION DES LOGS
# ================================================================================================
Write-Host "üìã √âTAPE 4: V√©rification des logs..." -ForegroundColor Yellow

Write-Host "   Pour voir les logs Railway:" -ForegroundColor Cyan
Write-Host "   1. Allez sur https://railway.app" -ForegroundColor White
Write-Host "   2. S√©lectionnez votre projet" -ForegroundColor White
Write-Host "   3. Cliquez sur 'Deployments'" -ForegroundColor White
Write-Host "   4. Cliquez sur le dernier d√©ploiement" -ForegroundColor White
Write-Host "   5. V√©rifiez les logs pour voir les erreurs" -ForegroundColor White

Write-Host ""

# ================================================================================================
# √âTAPE 5 : RECOMMANDATIONS
# ================================================================================================
Write-Host "üí° RECOMMANDATIONS:" -ForegroundColor Cyan

Write-Host "   1. Red√©ployez votre application Railway" -ForegroundColor White
Write-Host "   2. V√©rifiez que start-railway.js d√©marre correctement" -ForegroundColor White
Write-Host "   3. V√©rifiez les variables d'environnement Railway" -ForegroundColor White
Write-Host "   4. Testez l'API avec curl ou Postman" -ForegroundColor White

Write-Host ""
Write-Host "üîß CORRECTION APPLIQU√âE:" -ForegroundColor Green
Write-Host "   ‚úÖ start-railway.js corrig√©" -ForegroundColor Green
Write-Host "   ‚úÖ Configuration CORS v√©rifi√©e" -ForegroundColor Green

Write-Host ""
Write-Host "üöÄ Prochaines √©tapes:" -ForegroundColor Cyan
Write-Host "   1. Commitez et poussez les changements" -ForegroundColor White
Write-Host "   2. Red√©ployez sur Railway" -ForegroundColor White
Write-Host "   3. Testez √† nouveau l'API" -ForegroundColor White

# Arr√™ter le serveur local
Get-Process -Name "node" -ErrorAction SilentlyContinue | Stop-Process -Force
Write-Host ""
Write-Host "üõë Serveur local arr√™t√©" -ForegroundColor Yellow
